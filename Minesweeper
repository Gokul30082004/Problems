class Solution {
    public static void manage_click(char[][] board,int i,int j,char[][] reviledboard){
        // System.out.println(board[i][j]);
        if(board[i][j]!='M' && board[i][j]!='E')
            return;
        
        board[i][j]=reviledboard[i][j];
        // board[i][j]='1';
        if(board[i][j]=='0')
        board[i][j]='B';
        if(reviledboard[i][j]=='0'){
            for(int k=-1;k<2;k++){
                for(int l=-1;l<2;l++){
                    if(i+k<0 || j+l<0 || i+k>=board.length || j+l>=board[0].length)
                    continue;
                    manage_click(board,i+k,j+l,reviledboard);
                    
                }
            }
        }
    }
    public char[][] updateBoard(char[][] board, int[] click) {
        char reviledboard[][]=new char[board.length][board[0].length];
        int n=board.length;
        if(board[click[0]][click[1]]=='M'){
            board[click[0]][click[1]]='X';
            return board;
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<board[0].length;j++){
                reviledboard[i][j]='0';
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]=='M'){
                    for(int k=-1;k<2;k++){
                        for(int l=-1;l<2;l++){
                            if(i+k<0 || j+l<0 || i+k>=n || j+l>=board[0].length)
                            continue;
                            reviledboard[i+k][j+l]++;
                            
                        }
                    }
                    reviledboard[i][j]='M';
                }
            }
        }
        
        manage_click(board,click[0],click[1],reviledboard);
        return board;
    }
}
