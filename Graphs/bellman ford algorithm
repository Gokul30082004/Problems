class Solution {
    static int[] bellman_ford(int n, ArrayList<ArrayList<Integer>> edges, int s) {
        int dis[]=new int[n];
        Arrays.fill(dis,100000000);
        dis[s]=0;
        for(int i=0;i<n-1;i++){
            for(int it=0;it<edges.size();it++){
                int from=edges.get(it).get(0);
                int to=edges.get(it).get(1);
                int dist=edges.get(it).get(2);
                if(dis[from]!=100000000 && dis[from]+dist<dis[to]){
                    dis[to]=dis[from]+dist;
                }
            }
        }
        
        for(ArrayList<Integer> it:edges){
            int from=it.get(0);
            int to=it.get(1);
            int dist=it.get(2);
            if(dis[from]!=100000000 && dis[from]+dist<dis[to])
                return new int[]{-1};
        }
        return dis;
    }
}
